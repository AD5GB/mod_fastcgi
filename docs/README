/*
 * This file is used to track down development history of the module.
 * -- each entry should have a corresponding entry in the fcgivers.h
 * -- file, which would allow for easier debugging and maintenance.
 */

>>>>
>>>> Apache[X1.03.01]/mod_fastcgi[02.00.05] 19970909 unsupported
>>>> From: Stanley Gambarin <stanleyg@cs.bu.edu>
>>>>

  *) 	Yet more changes to the source distribution.  Separated out
	the Tcl dynamic string and buffer libraries into separate files.
	Did the same for the OS library, however, it is not really an
	abstraction... more like a bunch of wrappers.  Added to DEVNOTES
	a note about the problem of Apache not allowing including header
	file more than once.

>>>>
>>>> Apache[X1.03.01]/mod_fastcgi[02.00.04] 19970908 unsupported
>>>> From: Stanley Gambarin <stanleyg@cs.bu.edu>
>>>>
  
  *) 	More changes to the installation scripts.  Theoretically we
	should be able to to use the same Makefile/installation script
	for both Apache 1.2.x and 1.3.x.  Need some sort of the abstraction
	layer to use the same source code for both 1.2.x and 1.3.x sources.

>>>>
>>>> Apache[X1.03.01]/mod_fastcgi[02.00.03] 19970905 unsupported
>>>> From: Stanley Gambarin <stanleyg@cs.bu.edu>
>>>>

  *)	Created Makefile to compile the module into the archive library,
	just like the proxy module.  Also initial draft of the installation 
	script, which should work for both 1.2 and 1.3 sources of Apache.

>>>>
>>>> Apache[01.02.04]/mod_fastcgi[02.00.02] 19970903 unsupported
>>>> From: Stanley Gambarin <stanleyg@cs.bu.edu>
>>>>

  *)	More source reorg.  Separated out some header files.  Need much
	more work on this.  Updated the TODO file.  Added fcgivers.h and 
	CHANGES	file to track the history.

>>>>
>>>> Apache[01.02.04]/mod_fastcgi[02.00.01] 19970902 unsupported
>>>> From: Stanley Gambarin <stanleyg@cs.bu.edu>
>>>>

  *)   	Source reorganization.  This is done to provide a basis for later 
	functionality implementation.  See TODO file for more information 
	of what possible future enhancements are possible/desired.

>>>>
>>>> Apache[01.02.04]/mod_fastcgi[02.00.00] 19970902 unsupported
>>>> From:  David MacKenzie <djm@va.pubnix.com>
>>>>

  *)  	Create the "dynamic" dir and "mbox" as the user specified in the
	User and Group directives instead of as root.  They are created with
	restrictive permissions, and then the module checks to see whether the
	user specified in the User and Group directives has read, write, and
	execute permissions on them.  Those permissions had been explicitly
	denied by creating them as "root".  
  *)  	Some documentation was garbled or incomplete.
  *)  	When a FastCGI application can't be execl'd, the code used a
	value of errno that may have been stomped on by intervening system
	calls.  That happened on BSD/OS 2.1, where the error_log was 
	reporting errno=25 (NOTTY) instead of the correct errno=13 (EACCES).  
	An intervening stdio call was setting errno as a side-effect, which 
	it has the right to do.
  *)  	Erroneous fprintf arguments, a missing return value, an unused
	function, missing declarations, and other problems detected by gcc
	-Wall.	
  *)  	Duplicated code to create the lock file name merged into a single
	function, closing several memory leaks.
  *)  	FCGIConfig -minProcesses didn't allow a value of 0, so the last
	FCGI app in a given dynamic class would live forever, even if it
	hadn't been requested for weeks.
  *)  	The test for whether to keep looking for dynamic app victims to
	kill was backwards, so no dynamic apps were ever selected as 
	victims.
  *)  	The killInterval and updateInterval were being ignored; the
	sigsuspend() forced recalculations only when a child died, 
	instead of at the intervals specified.
  *)  	When a dynamic app couldn't be started, the program SEGV'd when
	trying to free the ipcAddrPtr twice.
  *)  	Remove the dead lock file and socket when cleaning up after a
  	server whose last child has been killed, so the FastCGIHandler 
	isn't fooled into thinking there is still a process serving 
	that app.
  *)  	Make file locking robust in the presence of signals.
  *)  	Rename some badly named variables.
  *)  	Fix typos in many comments.
  *)  	Fix some memory and file descriptor leaks.
  *)  	Make the blocking kill of a server closer to working.
  *)  	More fixes to calculations in dynamic application management.

>>>>
>>>> see README.OMI file for the previous changes to the module.
>>>>